[neopixel _MMU_Lights]
pin: PD3
chain_count: 4
color_order: GRB
initial_GREEN: 0.0
initial_RED: 0.0
initial_BLUE: 0.0

[gcode_macro _SP_NOTIFY]
gcode:
    {% set action = params.ACTION|default('') %}
    {% set lane = params.LANE|default(printer.save_variables.variables.last_loaded_lane|default(-1))|int %}
    {% set complete = params.COMPLETE|default(1)|int %}
    {% set error = params.ERROR|default(0)|int %}
    
    _SP_LED_ACTIONS ACTION='{action}' LANE={lane} COMPLETE={complete} ERROR={error}

[gcode_macro _SP_VARS]
variable_led_map: {
    -1: [0],   # NO LANE
    0: [4],    # LANE 0
    1: [3],    # LANE 1
    2: [2],    # LANE 2
    3: [1]     # GUEST LANE
    }

gcode:

[gcode_macro _SP_LED_ACTIONS]
gcode:
    {% set action = params.ACTION|default("")|string %}
    {% set lane = params.LANE|default(printer.save_variables.variables.last_loaded_lane)|default(-1)|int %}
    {% set complete = params.COMPLETE|default(1)|int %}
    {% set error = params.ERROR|default(0)|int %}
    {% set sp = printer["gcode_macro _SP_VARS"] %}

    # Define colors (brightness values from 0.0 to 1.0)
    {% set COLORS = {
        "GREEN": {"r": 0.0, "g": 1.0, "b": 0.0},
        "BLUE": {"r": 0.0, "g": 0.0, "b": 1.0},
        "YELLOW": {"r": 1.0, "g": 1.0, "b": 0.0},
        "RED": {"r": 1.0, "g": 0.0, "b": 0.0},
        "PURPLE": {"r": 1.0, "g": 0.0, "b": 1.0},
        "OFF": {"r": 0.0, "g": 0.0, "b": 0.0},
        "WHITE": {"r": 0.1, "g": 0.1, "b": 0.1}
    } %}

    # Get LED array for the current lane
    {% set led_indices = sp.led_map.get(lane, []) %}
    {% set prev_lane = printer.save_variables.variables.previous_lane|default(-1)|int %}
    {% set prev_led_indices = sp.led_map.get(prev_lane, []) %}

    # Helper to set an LED color with validation
    {% macro set_led(index, color) -%}
      {% if index >= 1 %}
        SET_LED LED=_MMU_Lights RED={ color.r } GREEN={ color.g } BLUE={ color.b } INDEX={ index } TRANSMIT=1
      {% endif %}
    {%- endmacro %}

    # Helper to set all LEDs for a lane
    {% macro set_lane_leds(indices, color) %} #-
      {% for index in indices %}
        { set_led(index, color) }
      {% endfor %}
    {% endmacro %}

    # Error handling: all LEDs red
    {% if error == 1 %}
        SET_LED LED=_MMU_Lights RED=1 Green=0 BLUE=0 TRANSMIT=1 # set_all_leds RED

    # New handling for lane -1
    {% elif lane == -1 %}
        SET_LED LED=_MMU_Lights RED=1 Green=1 BLUE=1 TRANSMIT=1 # set_all_leds WHITE
        { set_lane_leds(led_indices, COLORS["RED"]) }

        # Lane pending 
    {% elif action == "pending" %}
        SET_LED LED=_MMU_Lights RED=1 Green=1 BLUE=1 TRANSMIT=1 # set_all_leds WHITE
        { set_lane_leds(led_indices, COLORS["GREEN"]) }    

    # Lane loaded - Special handling for lane 3 (All LEDs ON)
    {% elif action == "loaded" %}
        SET_LED LED=_MMU_Lights RED=1 Green=1 BLUE=1 TRANSMIT=1 # set_all_leds WHITE
        { set_lane_leds(led_indices, COLORS["GREEN"]) }

    # Hub operations (loading/unloading)
    {% elif action in ["hub_loading", "hub_unloading"] %}
        SET_LED LED=_MMU_Lights RED=1 Green=1 BLUE=1 TRANSMIT=1 # set_all_leds WHITE
        { set_lane_leds(prev_led_indices, COLORS["BLUE"]) }
        { set_lane_leds(led_indices, COLORS["YELLOW"]) }

    # Extruder unloading
    {% elif action == "extruder_unloading" %}
        SET_LED LED=_MMU_Lights RED=1 Green=1 BLUE=1 TRANSMIT=1 # set_all_leds WHITE
        { set_lane_leds(led_indices, COLORS["YELLOW"]) }

    # Hotend or extruder loading/unloading
    {% elif action in ["hotend_loading", "hotend_unloading", "extruder_loading"] %}
        SET_LED LED=_MMU_Lights RED=1 Green=1 BLUE=1 TRANSMIT=1 # set_all_leds WHITE           
        { set_lane_leds(prev_led_indices, COLORS["BLUE"]) }
        { set_lane_leds(led_indices, COLORS["YELLOW"]) }

    # Runout only
    {% elif action == "runout" %}
        SET_LED LED=_MMU_Lights RED=1 Green=1 BLUE=1 TRANSMIT=1 # set_all_leds WHITE
        { set_lane_leds(led_indices, COLORS["RED"]) }

    # Pause
    {% elif action == "pause" %}
        SET_LED LED=_MMU_Lights RED=1 Green=0 BLUE=1 TRANSMIT=1 # set_all_leds PURPLE

    # Print end
    {% elif action == "print_end" %}
        SET_LED LED=_MMU_Lights RED=0 Green=1 BLUE=0 TRANSMIT=1 #  set_all_leds green    

    {% endif %}

    # Save current lane for reference
    SAVE_VARIABLE VARIABLE=previous_lane VALUE={ lane }



[gcode_macro TEST_SP_LEDS]
gcode:
    # Define colors (brightness values from 0.0 to 1.0)
    {% set COLORS = {
        "GREEN": {"r": 0.0, "g": 1.0, "b": 0.0},
        "BLUE": {"r": 0.0, "g": 0.0, "b": 1.0},
        "YELLOW": {"r": 1.0, "g": 1.0, "b": 0.0},
        "RED": {"r": 1.0, "g": 0.0, "b": 0.0},
        "PURPLE": {"r": 1.0, "g": 0.0, "b": 1.0},
        "OFF": {"r": 0.0, "g": 0.0, "b": 0.0},
        "WHITE": {"r": 0.1, "g": 0.1, "b": 0.1}
    } %}

    SET_LED LED=_MMU_Lights RED=0.0 GREEN=1.0 BLUE=0.0 INDEX={ 1 }
    G4 P5000
    SET_LED LED=_MMU_Lights RED=0.0 GREEN=0.0 BLUE=0.0 INDEX={ 1 }
    SET_LED LED=_MMU_Lights RED=0.0 GREEN=1.0 BLUE=0.0 INDEX={ 2 }
    G4 P5000
    SET_LED LED=_MMU_Lights RED=0.0 GREEN=0.0 BLUE=0.0 INDEX={ 2 }
    SET_LED LED=_MMU_Lights RED=0.0 GREEN=1.0 BLUE=0.0 INDEX={ 3 }
    G4 P5000
    SET_LED LED=_MMU_Lights RED=0.0 GREEN=0.0 BLUE=0.0 INDEX={ 3 }
    SET_LED LED=_MMU_Lights RED=0.0 GREEN=1.0 BLUE=0.0 INDEX={ 4 }
    G4 P5000
    SET_LED LED=_MMU_Lights RED=0.0 GREEN=0.0 BLUE=0.0 INDEX={ 4 }
    